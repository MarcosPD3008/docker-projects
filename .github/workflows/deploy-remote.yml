name: Deploy to Self-Hosted Runner

on:
  push:
    branches: [ main, master ]
    paths:
      - '**/docker-compose.yml'
      - '**/docker-compose.yaml'

env:
  DEPLOY_PATH: /opt/docker

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      n8n: ${{ steps.changes.outputs.n8n }}
      nextcloud: ${{ steps.changes.outputs.nextcloud }}
      sonarqube: ${{ steps.changes.outputs.sonarqube }}
      wiki: ${{ steps.changes.outputs.wiki }}
      changed-services: ${{ steps.list-changes.outputs.services }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            n8n:
              - 'n8n/**'
            nextcloud:
              - 'nextcloud/**'
            sonarqube:
              - 'sonarqube/**'
            wiki:
              - 'wiki/**'
      
      - name: List changed services
        id: list-changes
        run: |
          services=""
          if [ "${{ steps.changes.outputs.n8n }}" == "true" ]; then
            services="$services n8n"
          fi
          if [ "${{ steps.changes.outputs.nextcloud }}" == "true" ]; then
            services="$services nextcloud"
          fi
          if [ "${{ steps.changes.outputs.sonarqube }}" == "true" ]; then
            services="$services sonarqube"
          fi
          if [ "${{ steps.changes.outputs.wiki }}" == "true" ]; then
            services="$services wiki"
          fi
          echo "services=$services" >> $GITHUB_OUTPUT
          echo "Changed services: $services"

  deploy-to-server:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed-services != ''
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup deployment directory
        run: |
          mkdir -p ${{ env.DEPLOY_PATH }}
          echo "🏗️ Deployment directory ready: ${{ env.DEPLOY_PATH }}"
      
      - name: Deploy changed services
        run: |
          for service in ${{ needs.detect-changes.outputs.changed-services }}; do
            echo "🚀 Deploying $service locally..."
            
            # Copy service files to deployment path
            cp -r $service/ ${{ env.DEPLOY_PATH }}/
            cd ${{ env.DEPLOY_PATH }}/$service
            
            echo "📋 Current containers for $service:"
            docker compose ps || true
            
            echo "🔄 Stopping $service..."
            docker compose down || true
            
            echo "📥 Pulling latest images for $service..."
            docker compose pull
            
            echo "🚀 Starting $service..."
            docker compose up -d
            
            echo "✅ $service deployment completed"
            docker compose ps
            
            cd -
          done
      
      - name: Health Check
        run: |
          for service in ${{ needs.detect-changes.outputs.changed-services }}; do
            echo "🔍 Health checking $service..."
            cd ${{ env.DEPLOY_PATH }}/$service
            
            # Wait a bit for services to start
            sleep 10
            
            # Check if containers are running
            if docker compose ps | grep -q "Up"; then
              echo "✅ $service is running"
            else
              echo "❌ $service failed to start"
              docker compose logs --tail=50
              exit 1
            fi
            
            cd -
          done
      
      - name: Cleanup old images
        run: |
          echo "🧹 Cleaning up unused Docker images..."
          docker image prune -f
          echo "✅ Cleanup completed"

  notify-success:
    needs: [detect-changes, deploy-to-server]
    if: success()
    runs-on: ubuntu-latest
    steps:
      - name: Success Notification
        run: |
          echo "## ✅ Deployment Successful 🎉" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Successfully deployed the following services to self-hosted runner:" >> $GITHUB_STEP_SUMMARY
          for service in ${{ needs.detect-changes.outputs.changed-services }}; do
            echo "- 🚀 **$service**" >> $GITHUB_STEP_SUMMARY
          done
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "All services are now running on the target server." >> $GITHUB_STEP_SUMMARY

  notify-failure:
    needs: [detect-changes, deploy-to-server]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Failure Notification
        run: |
          echo "## ❌ Deployment Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The deployment encountered an error. Please check the logs above." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Services that were being deployed:" >> $GITHUB_STEP_SUMMARY
          for service in ${{ needs.detect-changes.outputs.changed-services }}; do
            echo "- ⚠️ **$service**" >> $GITHUB_STEP_SUMMARY
          done
