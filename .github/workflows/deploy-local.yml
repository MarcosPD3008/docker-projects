name: Local Development Deploy

on:
  push:
    branches: [ develop, feature/* ]
    paths:
      - '**/docker-compose.yml'
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to deploy (n8n, nextcloud, sonarqube, wiki, or all)'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - n8n
        - nextcloud
        - sonarqube
        - wiki

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.changes.outputs.services }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Detect changed services
        id: changes
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            if [ "${{ github.event.inputs.service }}" == "all" ]; then
              echo "services=n8n nextcloud sonarqube wiki" >> $GITHUB_OUTPUT
            else
              echo "services=${{ github.event.inputs.service }}" >> $GITHUB_OUTPUT
            fi
          else
            # Detect changes from git diff
            services=""
            if git diff --name-only HEAD~1 HEAD | grep -q "^n8n/"; then
              services="$services n8n"
            fi
            if git diff --name-only HEAD~1 HEAD | grep -q "^nextcloud/"; then
              services="$services nextcloud"
            fi
            if git diff --name-only HEAD~1 HEAD | grep -q "^sonarqube/"; then
              services="$services sonarqube"
            fi
            if git diff --name-only HEAD~1 HEAD | grep -q "^wiki/"; then
              services="$services wiki"
            fi
            echo "services=$services" >> $GITHUB_OUTPUT
          fi
          
          echo "Detected services: $services"

  validate-compose:
    needs: detect-changes
    if: needs.detect-changes.outputs.services != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate compose files
        run: |
          for service in ${{ needs.detect-changes.outputs.services }}; do
            echo "🔍 Validating docker-compose.yml for $service..."
            cd $service
            docker-compose config
            echo "✅ $service docker-compose.yml is valid"
            cd ..
          done

  deploy-local:
    needs: [detect-changes, validate-compose]
    if: needs.detect-changes.outputs.services != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy services locally
        run: |
          echo "🚀 Starting deployment of changed services..."
          
          for service in ${{ needs.detect-changes.outputs.services }}; do
            echo ""
            echo "📦 Deploying $service..."
            cd $service
            
            # Check if already running
            if docker-compose ps | grep -q "Up"; then
              echo "🔄 Service $service is running, recreating..."
              docker-compose down
            fi
            
            # Deploy
            docker-compose up -d
            
            echo "✅ $service deployed successfully"
            docker-compose ps
            
            cd ..
          done
      
      - name: Show deployment status
        run: |
          echo ""
          echo "📋 Final deployment status:"
          echo ""
          
          for service in ${{ needs.detect-changes.outputs.services }}; do
            echo "🔍 $service status:"
            cd $service
            docker-compose ps
            cd ..
            echo ""
          done
