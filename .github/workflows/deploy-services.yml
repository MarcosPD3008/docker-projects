name: Deploy Docker Services

on:
  push:
    branches: [ main, master ]
    paths:
      - '**/docker-compose.yml'
      - '**/docker-compose.yaml'
  pull_request:
    branches: [ main, master ]
    paths:
      - '**/docker-compose.yml'
      - '**/docker-compose.yaml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      n8n: ${{ steps.changes.outputs.n8n }}
      nextcloud: ${{ steps.changes.outputs.nextcloud }}
      sonarqube: ${{ steps.changes.outputs.sonarqube }}
      wiki: ${{ steps.changes.outputs.wiki }}
      minecraft: ${{ steps.changes.outputs.minecraft }}
      changed-services: ${{ steps.list-changes.outputs.services }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            n8n:
              - 'n8n/**'
            nextcloud:
              - 'nextcloud/**'
            sonarqube:
              - 'sonarqube/**'
            wiki:
              - 'wiki/**'
            minecraft:
              - 'minecraft/**'
      
      - name: List changed services
        id: list-changes
        run: |
          services=""
          if [ "${{ steps.changes.outputs.n8n }}" == "true" ]; then
            services="$services n8n"
          fi
          if [ "${{ steps.changes.outputs.nextcloud }}" == "true" ]; then
            services="$services nextcloud"
          fi
          if [ "${{ steps.changes.outputs.sonarqube }}" == "true" ]; then
            services="$services sonarqube"
          fi
          if [ "${{ steps.changes.outputs.wiki }}" == "true" ]; then
            services="$services wiki"
          fi
          if [ "${{ steps.changes.outputs.minecraft }}" == "true" ]; then
            services="$services minecraft"
          fi
          echo "services=$services" >> $GITHUB_OUTPUT
          echo "Changed services: $services"

  validate-compose:
    needs: detect-changes
    if: needs.detect-changes.outputs.changed-services != ''
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Validate docker-compose files
        run: |
          echo "🔍 Validating Docker Compose configurations..."
          
          for service in ${{ needs.detect-changes.outputs.changed-services }}; do
            echo "📋 Validating $service..."
            cd $service && docker compose config && cd ..
          done
          
          echo "✅ All configurations are valid!"

  deploy:
    needs: [detect-changes, validate-compose]
    if: needs.detect-changes.outputs.changed-services != '' && github.event_name == 'push'
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Deploy changed services
        run: |
          echo "🚀 Starting deployment of changed services..."
          
          for service in ${{ needs.detect-changes.outputs.changed-services }}; do
            echo ""
            echo "📦 Deploying $service..."
            cd $service
            
            echo "📋 Current status:"
            docker compose ps || true
            
            echo "🔄 Stopping $service..."
            docker compose down || true
            
            echo "📥 Pulling latest images..."
            docker compose pull || true
            
            echo "🚀 Starting $service..."
            docker compose up -d
            
            echo "✅ $service deployment completed"
            docker compose ps
            
            cd ..
          done

      - name: Health Check
        run: |
          echo "🔍 Performing health checks..."
          sleep 10
          
          for service in ${{ needs.detect-changes.outputs.changed-services }}; do
            echo "🩺 Checking $service health..."
            cd $service
            
            if docker compose ps | grep -q "Up"; then
              echo "✅ $service is running healthy"
            else
              echo "❌ $service health check failed"
              echo "📋 Container logs:"
              docker compose logs --tail=20
              exit 1
            fi
            
            cd ..
          done
          
          echo "✅ All services are healthy!"

      - name: Cleanup
        if: success()
        run: |
          echo "🧹 Cleaning up unused Docker resources..."
          docker image prune -f || true
          echo "✅ Cleanup completed"

  summary:
    needs: [detect-changes, validate-compose, deploy]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Deployment Summary
        run: |
          echo "## Deployment Summary 📋" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "🔍 **Pull Request - Validation Only**" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            if [ "${{ needs.validate-compose.result }}" == "success" ]; then
              echo "✅ All configurations validated successfully!" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ Validation failed - please check configurations" >> $GITHUB_STEP_SUMMARY
            fi
          else
            if [ "${{ needs.deploy.result }}" == "success" ]; then
              echo "🎉 **Deployment Successful!**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Deployed Services:**" >> $GITHUB_STEP_SUMMARY
              for service in ${{ needs.detect-changes.outputs.changed-services }}; do
                echo "- ✅ **$service**" >> $GITHUB_STEP_SUMMARY
              done
            elif [ "${{ needs.deploy.result }}" == "failure" ]; then
              echo "❌ **Deployment Failed**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "**Failed Services:**" >> $GITHUB_STEP_SUMMARY
              for service in ${{ needs.detect-changes.outputs.changed-services }}; do
                echo "- ⚠️ **$service**" >> $GITHUB_STEP_SUMMARY
              done
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "Please check the logs above for details." >> $GITHUB_STEP_SUMMARY
            elif [ "${{ needs.detect-changes.outputs.changed-services }}" == "" ]; then
              echo "ℹ️ **No Changes Detected**" >> $GITHUB_STEP_SUMMARY
              echo "" >> $GITHUB_STEP_SUMMARY
              echo "No docker-compose files were modified." >> $GITHUB_STEP_SUMMARY
            fi
          fi
