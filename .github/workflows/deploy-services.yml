name: Deploy Docker Services
on:
  push:
    branches: [ main, master ]
    paths:
      - '**/docker-compose.yml'
      - '**/docker-compose.yaml'
  pull_request:
    branches: [ main, master ]
    paths:
      - '**/docker-compose.yml'
      - '**/docker-compose.yaml'

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      n8n: ${{ steps.changes.outputs.n8n }}
      nextcloud: ${{ steps.changes.outputs.nextcloud }}
      sonarqube: ${{ steps.changes.outputs.sonarqube }}
      wiki: ${{ steps.changes.outputs.wiki }}
      minecraft: ${{ steps.changes.outputs.minecraft }}
      homeassistant: ${{ steps.changes.outputs.homeassistant }}
      changed-services: ${{ steps.list-changes.outputs.services }}
      has-changes: ${{ steps.list-changes.outputs.has-changes }}
    steps:
      
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            n8n:
              - 'n8n/**'
            nextcloud:
              - 'nextcloud/**'
            sonarqube:
              - 'sonarqube/**'
            wiki:
              - 'wiki/**'
            minecraft:
              - 'minecraft/**'
            homeassistant:
              - 'homeassistant/**'
      
      - name: List changed services
        id: list-changes
        run: |
          services=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep 'docker-compose.yml\|docker-compose.yaml' | awk -F'/' '{print $1}' | sort | uniq)
          echo "services=$services" >> $GITHUB_OUTPUT
          if [ -n "$services" ]; then
            echo "has-changes=true" >> $GITHUB_OUTPUT
            echo "✅ Changed services: $services"
          else
            echo "has-changes=false" >> $GITHUB_OUTPUT
            echo "⚠️ No services changed"
          fi

  debug:
    needs: detect-changes 
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Debug output
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Has changes: ${{ needs.detect-changes.outputs.has-changes }}"
          echo "Changed services: '${{ needs.detect-changes.outputs.changed-services }}'"
          echo "n8n: ${{ needs.detect-changes.outputs.n8n }}"
          echo "nextcloud: ${{ needs.detect-changes.outputs.nextcloud }}"
          echo "sonarqube: ${{ needs.detect-changes.outputs.sonarqube }}"
          echo "wiki: ${{ needs.detect-changes.outputs.wiki }}"
          echo "minecraft: ${{ needs.detect-changes.outputs.minecraft }}"
          echo "homeassistant: ${{ needs.detect-changes.outputs.homeassistant }}"

  deploy:
    name: Deploy Changed Services
    needs: detect-changes
    # Only run if there are actual changes
    if: needs.detect-changes.outputs.has-changes == 'true'
    runs-on: self-hosted
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4
        
      - name: Deploy changed services
        run: |
          echo "🚀 Starting deployment of changed services..."
          changed_services="${{ needs.detect-changes.outputs.changed-services }}"
          echo "🔍 Services to deploy: $changed_services"
          
          for service in $changed_services; do
            echo ""
            echo "📦 Deploying $service..."
            
            if [ ! -d "$service" ]; then
              echo "❌ Directory $service not found!"
              continue
            fi
            
            cd "$service" || { echo "❌ Failed to enter directory $service"; exit 1; }
            
            # Check if docker-compose file exists
            if [ ! -f "docker-compose.yml" ] && [ ! -f "docker-compose.yaml" ]; then
              echo "❌ No docker-compose file found in $service"
              cd ..
              continue
            fi
            
            echo "📋 Current status:"
            docker compose ps || true
            
            echo "🔄 Stopping $service..."
            docker compose down || true
            
            echo "🚀 Starting $service..."
            docker compose up -d
            
            echo "✅ $service deployment completed"
            docker compose ps
            cd ..
          done
          
      - name: Show all running containers
        run: docker ps

  no-changes:
    name: No Changes Detected
    needs: detect-changes
    if: needs.detect-changes.outputs.has-changes == 'false'
    runs-on: ubuntu-latest
    steps:
      - name: Skip deployment
        run: echo "⚠️ No services changed. Skipping deployment."
